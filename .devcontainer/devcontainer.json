// For format details, see https://aka.ms/devcontainer.json. For config options, see the README at:
// https://github.com/microsoft/vscode-dev-containers/tree/v0.238.0/containers/python-3
{
	"name": "Python 3",
	"build": {
		"dockerfile": "Dockerfile",
		"context": "..",
		"args": {
			// Update 'VARIANT' to pick a Python version: 3, 3.10, 3.9, 3.8, 3.7, 3.6
			// Append -bullseye or -buster to pin to an OS version.
			// Use -bullseye variants on local on arm64/Apple Silicon.
			"VARIANT": "3.10-bullseye"
		}
	},
	// For VSCode local bind mount ~/.databrickscfg to persist the config
	"initializeCommand": "touch $HOME/.databrickscfg",
	"mounts": [
		// mount databricks config
		"source=${localEnv:HOME}/.databrickscfg,target=/home/vscode/.databrickscfg,type=bind,consistency=cached"
	],
	"workspaceMount": "source=${localWorkspaceFolder},target=/workspaces/dbx,type=bind,consistency=cached",
	"workspaceFolder": "/workspaces/dbx",
	// Configure tool-specific properties.
	"customizations": {
		// Configure properties specific to VS Code.
		"vscode": {
			// Set *default* container specific settings.json values on container create.
			"settings": {
				"python.defaultInterpreterPath": "/usr/local/bin/python",
				"python.linting.enabled": true,
				"python.languageServer": "Pylance",
				"python.formatting.autopep8Path": "/usr/local/py-utils/bin/autopep8",
				"python.formatting.blackPath": "/usr/local/py-utils/bin/black",
				"python.formatting.yapfPath": "/usr/local/py-utils/bin/yapf",
				"python.linting.banditPath": "/usr/local/py-utils/bin/bandit",
				"python.linting.flake8Path": "/usr/local/py-utils/bin/flake8",
				"python.linting.mypyPath": "/usr/local/py-utils/bin/mypy",
				"python.linting.pycodestylePath": "/usr/local/py-utils/bin/pycodestyle",
				"python.linting.pydocstylePath": "/usr/local/py-utils/bin/pydocstyle",
				"python.linting.pylintPath": "pylint",
				"python.testing.unittestArgs": [
					"-v",
					"-s",
					"./tests/unit",
					"-p",
					"*.py"
				],
				"python.testing.pytestEnabled": false,
				"python.testing.unittestEnabled": true,
				"editor.formatOnSave": true,
				"python.formatting.provider": "black",
				"editor.defaultFormatter": "ms-python.black-formatter",
				"python.linting.prospectorEnabled": true
			},
			// Add the IDs of extensions you want installed when the container is created.
			"extensions": [
				"ms-python.python",
				"ms-python.vscode-pylance",
				"ms-python.black-formatter",
				"ms-vscode.makefile-tools"
			]
		}
	},
	// Use 'postCreateCommand' to run commands after the container is created.
	"postCreateCommand": "make install",
	"remoteUser": "vscode",
	"remoteEnv": {
		"PATH": "/home/vscode/.venv/bin:${containerEnv:PATH}"
	}
}